/*==================== RESET STYLES ====================*/
@import 'import/reset.scss';
/*==================== RESET STYLES ====================*/

/*==================== FONTS ====================*/
@import 'fonts.scss';
/*==================== FONTS ====================*/

/*==================== VARIABLES ====================*/
$maxWidthLayout: 1440;
$maxWidthContainer: 1310;
$gilroyFont: 'Gilroy', sans-serif;
$whiteColor: #ffffff;
$blackColor: #1a1a1a;
$grayColor: #868686;
$orangeColor: #fea803;
/*==================== VARIABLES ====================*/

/*==================== MIXINS ====================*/
// responsive value
@mixin respValue($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthLayout - 320}));
    }
  } @else {
    //Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthLayout - 320}));
  }
}
// snippet (rv)
// responsive value
/*==================== MIXINS ====================*/

/*==================== BASIC PARAMETERS ====================*/
html {
  scroll-behavior: smooth;
}

body {
  font-family: $gilroyFont;
  font-weight: 400;
  font-size: 15px;
  line-height: 1.1;
  background: $whiteColor;
  color: $blackColor;

  @media (max-width: 768px) {
    &.lock {
      overflow: hidden;
    }
  }
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  overflow: hidden;

  > * {
    min-width: 0;
  }
}

.page {
  flex: 1 1 auto;

  &__intro,
  &__call-back {
    &:not(:last-child) {
      @include respValue('margin-bottom', 180, 60, 1);
    }
  }

  &:not(:last-child) {
    @include respValue('margin-bottom', 200, 100, 1);
  }
}
/*==================== BASIC PARAMETERS ====================*/

/*==================== REPEAT BLOCK ====================*/

//! container
// .container {
//   width: 100%;
//   max-width: $maxWidthContainer + px;
//   padding: 0 15px;
//   margin: 0 auto;
// }

[class*='__container'] {
  width: 100%;
  max-width: $maxWidthContainer + px;
  padding: 0 15px;
  margin: 0 auto;
}
//! container

//! responsive bg img
@import 'import/ibg.scss';

.ibg {
  position: relative;
  img {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    object-fit: cover;
  }
}
//! responsive bg img

//! button
.btn {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: 200px;
  width: 100%;
  min-height: 50px;
  border-radius: 2px;
  padding: 5px;
  overflow: hidden;
  font-weight: 600;
  font-size: 13px;
  color: $whiteColor;

  &_bg-orange {
    background: $orangeColor;
  }

  &_bg-black {
    background: $blackColor;
  }

  &__item {
    position: relative;
    z-index: 3;
  }

  &::before {
    content: '';
    position: absolute;
    width: 2em;
    height: 100%;
    top: 0;
    left: 0;
    background: rgba(238, 238, 238, 0.7);
    transform: translateX(-4em) skewX(-45deg);
  }

  &:hover {
    &::before {
      animation: highlight 0.6s linear;
    }
  }
}

@keyframes highlight {
  0% {
    transform: translateX(-4em) skewX(-45deg);
  }
  100% {
    transform: translateX(20em) skewX(-45deg);
  }
}
//! button

//! underline
.tdu {
  @media (min-width: 800px) {
    display: inline-block;
    position: relative;

    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 1px;
      bottom: -1px;
      left: 0;
      transform: scale(0);
      transform-origin: left;
      transition: all 0.2s linear;
    }

    &_oc {
      &::before {
        background: $orangeColor;
      }
    }

    &_bc {
      &::before {
        background: $blackColor;
      }
    }

    &:hover {
      &::before {
        transform: scale(1);
      }
    }
  }
}
//! underline

// ! header block
.header-block {
  &__title {
    @include respValue('font-size', 34, 28, 1);
  }

  &__text {
    font-weight: 300;
    color: rgba(26, 26, 26, 0.9);
  }
}

// ! header block

/*==================== REPEAT BLOCK ====================*/

@import 'import/header.scss';
@import 'import/intro.scss';
@import 'import/footer.scss';
@import 'import/call-back.scss';
